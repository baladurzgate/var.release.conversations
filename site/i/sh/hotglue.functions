function SPEAKERINITIALHEADER(){

  # WRITE HOTGLUE HEADER
    echo "type:text"                                          >  $AUTHORBOX
    echo "module:text"                                        >> $AUTHORBOX
    echo "object-height:20px"                                 >> $AUTHORBOX
    echo "object-left:XAUTHORPOSpx"                           >> $AUTHORBOX
    echo "object-top:YAUTHORPOSpx"                            >> $AUTHORBOX
    echo "object-width:${AUTHORWIDTH}px"                      >> $AUTHORBOX
    echo "object-zindex:200"                                  >> $AUTHORBOX
    echo "text-padding-x:0px"                                 >> $AUTHORBOX
    echo "text-padding-y:0px"                                 >> $AUTHORBOX
  # echo "text-background-color:rgb(${BOXCOLOR})"             >> $AUTHORBOX
  # echo "text-background-color:rgb(${COLORSTANDARD})"        >> $AUTHORBOX
    echo "text-font-family: ocra, Georgia, serif"         >> $AUTHORBOX
    echo "text-font-size:15px"                                >> $AUTHORBOX
    echo "text-line-height:5px"                               >> $AUTHORBOX
    echo "text-font-color:rgb(${BOXCOLOR})"                   >> $AUTHORBOX
    echo "object-lock:locked"                                 >> $AUTHORBOX
    echo "this is: speaker initial ${SPEAKER}"                >> $AUTHORBOX
    echo ""                                                   >> $AUTHORBOX

}


# =========================================================================== #
# MDSH FUNCTIONS
# =========================================================================== #

function GRAFIK(){

  echo "here is a grafik"

}

# --------------------------------------------------------------------------- #

function NOWSPEAKING() {

# WRITE HOTGLUE HEADER
  echo "type:text"                                          >  ${FILE}.box
  echo "module:text"                                        >> ${FILE}.box
  echo "object-height:HEIGHTFOOpx"                          >> ${FILE}.box
  echo "object-left:${XPOS}px"                              >> ${FILE}.box
  echo "object-top:${YPOS}px"                               >> ${FILE}.box
  echo "object-width:${WIDTH}px"                            >> ${FILE}.box
  echo "object-zindex:0"                                    >> ${FILE}.box
  echo "text-background-color:rgb(${BOXCOLOR})"             >> ${FILE}.box
  echo "text-font-family:'Courier New',Courier,monospace"   >> ${FILE}.box
# echo "text-padding-x:10px"                                >> ${FILE}.box
# echo "text-padding-y:20px"                                >> ${FILE}.box
  echo "text-font-size:8px"                                 >> ${FILE}.box
  echo "text-line-height:15px"                              >> ${FILE}.box
  echo "text-font-color:rgb($TEXTCOLOR)"                    >> ${FILE}.box
  echo "text-font-size:13px"                                >> ${FILE}.box
  echo "object-lock:locked"                                 >> ${FILE}.box
  echo "this is: content $SPEAKER"                          >> ${FILE}.box
  echo ""                                                   >> ${FILE}.box

  cat ${FILE}.dump | sed ':a;N;$!ba;s/\n/ /g' >> ${FILE}.box

  sed -i  "s/^$/$EMPTYLINE/g"       ${FILE}.box # REPLACE EMPTY LINE WITH PLACEHOLDER
  sed -i  "s/$EMPTYLINE/\n&\n/g"    ${FILE}.box # PUT EMPTY LINE PLACEHOLDER ON SEPARATE LINE
  sed -i 's/^[ \t]*//'              ${FILE}.box # REMOVE LEADING BLANKS
  sed -i '/^$/d'                    ${FILE}.box # REMOVE BLANKS LINES
  sed -i '$!N; /^\(.*\)\n\1$/!P; D' ${FILE}.box # REMOVE CONSECUTIVE EQUAL LINES
  sed -i  "s/$EMPTYLINE//g"         ${FILE}.box # REMOVE EMPTYLINE PLACEHOLDER
  sed -i -e :a -e '/^\n*$/{$d;N;ba' -e '}' ${FILE}.box # DELETE ALL TRAILING BLANK LINES AT THE END OF THE FILE
  sed -i  "s/ ,/,/g"                ${FILE}.box # REMOVE BAD FORMATTING


# CALCULATE HEIGHT FOR CURRENT BOX             #
# -------------------------------------------- #
  LINENUMBER=`cat ${FILE}.box            | \
              sed -n "/^$/,\\$p"         | \
              sed "s/^$/$EMPTYLINE/g"    | \
              pandoc -r html -w plain    | \
              sed ':a;N;$!ba;s/\n//g'    | \
              fold -s -w $CHARPERLINE    | \
              sed "s/$EMPTYLINE/\n&\n\n/g" | \
              wc -l`
  HEIGHT=`expr $LINENUMBER \* $LINEHEIGHT`
# echo "HEIGHT = "$HEIGHT
# echo "CHARPERLINE = "$CHARPERLINE

  sed -i "s/HEIGHTFOO/$HEIGHT/g" ${FILE}.box


# POSITION AUTHORBOX (SUBSTITUTE PLACEHOLDERS)
# --------------------------------------------------------------------------- #
  if [ `echo $AUTHORBOX | wc -c` -gt 2 ]; then

   sed -i "s/YAUTHORPOS/$YPOS/g" $AUTHORBOX
 # XPOSSPEAKER=`expr $XPOSSTANDARD - $XSHIFT`
   XPOSSPEAKER=`expr $XPOSSTANDARD + 50`
   sed -i "s/XAUTHORPOS/$XPOSSPEAKER/g" $AUTHORBOX

  fi

# NUMBER FOOTNOTES AND POSITION FOOTNOTEBOX (SUBSTITUTE PLACEHOLDERS)
# --------------------------------------------------------------------------- #

# PREVFOOTNOTEHEIGHT=0
# FOOTNOTEPOS=0

  for FOOTNOTEBOX in `grep FOOTNOTEPOS $TMPDIR/*.box | cut -d ":" -f 1`
   do
    # + INVISIBLE HTML CHARACTER FOR LATER IDENTIFICATION
      FOOTNOTEMARK=" <b>[$FOOTNOTECOUNT]<\/b>\&\#8203\;"
    # http://stackoverflow.com/questions/148451/how-to-use-sed-to-replace-only-the-first-occurrence-in-a-file
      sed -i "0,/\[FT\]/{s/\[FT\]/$FOOTNOTEMARK/}" ${FILE}.box

      FOOTNOTELINE=`cat ${FILE}.box | \
                    sed -n "/^$/,\\$p" | \
                    sed "s/^$/$EMPTYLINE/g"  | \
                    pandoc -r html -w plain  | \
                    sed ':a;N;$!ba;s/\n//g'    | \
                    fold -s -w $CHARPERLINE  | \
                    sed "s/$EMPTYLINE/\n&\n/g" | \
                    tac | \
                    sed -n "/[$FOOTNOTECOUNT]/,\\$p" | \
                    wc -l`

      LINEADD=`expr $FOOTNOTELINE \* $FOOTNOTELINEHEIGHT`

      if [ `expr $YFOOTNOTEPOS + $PREVFOOTNOTEHEIGHT + 20` -gt \
           `expr $YPOS + $LINEADD + 20` ];
       then
            YFOOTNOTEPOS=`expr $YFOOTNOTEPOS + $PREVFOOTNOTEHEIGHT + 30`
       else
            YFOOTNOTEPOS=`expr $YPOS + $LINEADD + 0`
      fi

      sed -i "s/YFOOTNOTEPOS/$YFOOTNOTEPOS/g" $FOOTNOTEBOX
      sed -i "s/FOOTNOTEMARK/$FOOTNOTEMARK/g" $FOOTNOTEBOX

      FOOTNOTECOUNT=`expr $FOOTNOTECOUNT + 1`

      PREVFOOTNOTEHEIGHT=`cat $FOOTNOTEBOX | \
                          sed -n "/^$/,\\$p" | \
                          pandoc -r html -w plain | \
                          fold -s -w $FOOTNOTECHARS | \
                          wc -l`
      PREVFOOTNOTEHEIGHT=`expr $PREVFOOTNOTEHEIGHT \* $FOOTNOTELINEHEIGHT`

  done


# VALUES USED FOR NEXT BOX/FILE ###############################################
###############################################################################

# START NEXT BOX/FILE
# --------------------------------------------------------------------------- #
  FILENAME=`expr $FILENAME + 100`
  FILE=$TMPDIR/$FILENAME

# YPOS ACCORDING TO HEIGHT OF PREVIOUS BOX       #
# ---------------------------------------------- #
  YPOS=`expr ${YPOS} + ${HEIGHT} + 40`


# PEOPLE ######################################################################
###############################################################################

# THIS IS FEMKE SNELTING SPEAKING
# -------------------------------
  if [ X$1 = XFS ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=190
    XSHIFT=-10

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
  # --------------------
    SPEAKERINITIALHEADER
    echo "FS"                             >> $AUTHORBOX


# THIS IS RICARDO LAFUENTE SPEAKING
# ---------------------------------
  elif [ X$1 = XRL ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=120
    XSHIFT=20

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "RL"                             >> $AUTHORBOX

# THIS IS TOM LECHNER SPEAKING
# ---------------------------------
  elif [ X$1 = XTL ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=120
    XSHIFT=20

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "TL"                             >> $AUTHORBOX

# THIS IS DENIS JACQUERYE SPEAKING
# ---------------------------------
  elif [ X$1 = XDJ ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=200
    XSHIFT=-60

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "DJ"                              >> $AUTHORBOX

# THIS IS NICOLA MALEVÉ SPEAKING
# ---------------------------------
  elif [ X$1 = XNM ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=200
    XSHIFT=-60

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "NM"                              >> $AUTHORBOX

# THIS IS LUDIVINE LOISEAU SPEAKING
# ---------------------------------
  elif [ X$1 = XLL ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=200
    XSHIFT=-60

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "LL"                              >> $AUTHORBOX

# THIS IS PIERRE MARCHAND SPEAKING
# ---------------------------------
  elif [ X$1 = XPM ]; then

    SPEAKER="("${1}")"
    AUTHORWIDTH=110
    XSHIFT=40

    XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
    WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

    CHARPERLINE=`python -c "print $WIDTH / 11"`
  # echo $CHARPERLINE
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
  # echo $CHARPERLINE

    #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
    TEXTCOLOR="0,0,0"

    AUTHORBOX=$TMPDIR/`expr $FILENAME + 2`.box

  # WRITE HOTGLUE HEADER
    SPEAKERINITIALHEADER
    echo "PM"                            >> $AUTHORBOX

  # THIS IS X SPEAKING
  # ---------------------------------
      elif [ X$1 = XX ]; then

        SPEAKER="("${1}")"
        AUTHORWIDTH=110
        XSHIFT=0

        XPOS=`expr $XPOSSTANDARD + $AUTHORWIDTH + 10 + $XSHIFT`
        WIDTH=`expr $WIDTHSTANDARD - $AUTHORWIDTH - 10`

        CHARPERLINE=`python -c "print $WIDTH / 11"`
      # echo $CHARPERLINE
        CHARPERLINE=`python -c "print round($CHARPERLINE)"`
        CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`
      # echo $CHARPERLINE

        #BOXCOLOR=$((RANDOM%55+200)),0,$((RANDOM%55+200))
        TEXTCOLOR="0,0,0"





###############################################################################

  else

    SPEAKER=""
  # XPOS=$XPOSSTANDARD
    XSHIFT=$XSHIFTSTANDARD
    XPOS=`expr $XPOSSTANDARD + $XSHIFTSTANDARD`
  # YPOS=`expr $YPOS + 20`
    WIDTH=$WIDTHSTANDARD


  # CHARPERLINE=$CHARPERLINESTANDARD
    CHARPERLINE=`python -c "print $WIDTH / 10.8"`
    CHARPERLINE=`python -c "print round($CHARPERLINE)"`
    CHARPERLINE=`echo $CHARPERLINE | cut -d "." -f 1`

    BOXCOLOR=$BOXCOLORSTANDARD
    TEXTCOLOR=$TEXTCOLORSTANDARD

    AUTHORBOX=""

  fi

}



# --------------------------------------------------------------------------- #

function SIDENOTE() {

  FOOTNOTELINEHEIGHT=8

  XPOSFOOTNOTE=`expr $XPOSSTANDARD + $WIDTHSTANDARD + 130`
  YFOOTNOTEPOS=`expr $YFOOTNOTEPOS + 5`

  NOTECOUNT=`expr $NOTECOUNT + 1`
  FOOTNOTE=`grep "^% SIDENOTE" $PADDUMP |  \
            head -n $NOTECOUNT | tail -1 | \
            cut -d ":" -f 2- | pandoc -r markdown -w html`

  FOOTNOTEBOX=$TMPDIR/`expr $FILENAME + $YFOOTNOTEPOS`.box
  FOOTNOTECHARS=15

# WRITE HOTGLUE HEADER
  echo "type:text"                                          >  $FOOTNOTEBOX
  echo "module:text"                                        >> $FOOTNOTEBOX
  echo "object-height:${HEIGHT}px"                          >> $FOOTNOTEBOX
# echo "object-left:"$(($XPOS + $WIDTH + 20 + 10))"px"      >> $FOOTNOTEBOX
  echo "object-left:${XPOSFOOTNOTE}px"                      >> $FOOTNOTEBOX
  echo "object-top:YFOOTNOTEPOSpx"                          >> $FOOTNOTEBOX
  echo "object-width:250px"                                 >> $FOOTNOTEBOX
  echo "object-zindex:0"                                    >> $FOOTNOTEBOX
# echo "text-background-color:rgb(${BOXCOLOR})"             >> $FOOTNOTEBOX
  echo "text-font-family:Junicode, Georgia, serif"          >> $FOOTNOTEBOX
# echo "text-padding-x:10px"                                >> $FOOTNOTEBOX
# echo "text-padding-y:20px"                                >> $FOOTNOTEBOX
  echo "text-font-size:12px"                                >> $FOOTNOTEBOX
  echo "text-line-height:15px"                              >> $FOOTNOTEBOX
  echo "text-font-color:rgb(0, 0, 0)"                       >> $FOOTNOTEBOX
  echo "text-font-size:12px"                                >> $FOOTNOTEBOX
  echo "object-lock:locked"                                 >> $FOOTNOTEBOX
  echo "this is: footnote"                                  >> $FOOTNOTEBOX
  echo ""                                                   >> $FOOTNOTEBOX

  echo "FOOTNOTEMARK $FOOTNOTE" | \
  sed ':a;N;$!ba;s/\n/ /g' | \
  pandoc -r markdown -w html | \
  sed 's/<p>//g' | sed 's/<\/p>//g' | sed '/^$/d'           >> $FOOTNOTEBOX

}

# --------------------------------------------------------------------------- #
